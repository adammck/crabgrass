= Install the necessary dependencies

The required dependent programs and ruby libraries are detailed in the
table below. You may either install them via the gem package manager,
or if using Debian/Ubuntu by using the Debian package. Both names
are listed in the table when both are available, if only one is listed,
then you can only install it via that mechanism.

If you are running Debian stable, you can often pull newer versions of
packages from [http://backports.org].

| gem        | debian package          | notes / required versions                     |
|------------+-------------------------+-----------------------------------------------|
|            | ruby1.8                 | =1.8.7                                        |
|            | ruby1.8-dev             |                                               |
|            | rubygems                |                                               |
| rake       | rake                    | >=0.8.1                                       |
| rails      | rails*                  | =2.1.0                                        |
| mysql      | libmysql-ruby           | ruby mysql support >=5.0                      |
|            | mysql-server            | the database server                           |
|            | libopenssl-ruby         |                                               |
| tzinfo     | libtzinfo-ruby          | timezone support                              |
| RedCloth   | libredcloth-ruby        | for crabgrass markup: (GreenCloth) >=4.2.2    |
| haml       | libhaml-ruby            | templating, generated CSS site themes >=2.2.8 |
| hpricot    | libhpricot-ruby         | visual WYSIWYG wiki editor >=0.8.1            |
| chronic    | libchronic-ruby         | required by backgroundrb                      |
| packet     | libpacket-ruby          | required by backgroundrb >=0.1.15             |
| mime-types | libmime-types-ruby      | file upload bug in IE6                        |
|            | openoffice.org          | image thumbnails/document previews (optional) |
|            | openoffice.org-headless | image thumbnails/document previews (optional) |
|            | msttcorefonts           | document previews (optional)                  |
|            | graphicsmagick          | thumbnail generation (optional)               |
|            | inkscape                | thumbnail generation (optional)               |
|            | libcrack2               | password strength checking (optional)         |
|            | cracklib-runtime        | password strength checking (optional)         |
|            | libopen4-ruby           | better pipes, for latex renderer (optional)   |
|            | ruby-debug              | for debugging running application (optional)  |
|            | libxslt1-dev            | pre-required for nokogiri (optional)          |
|            | libxml2-dev             | pre-required for nokogiri (optional)          |
| nokogiri   | libnokogiri-ruby        | for webrat plugin (optional)                  |
| launchy    |                         | for webrat plugin (optional)                  |
| leftright  |                         | for better organized test output (optional)   |


NOTE: If you use the Debian rails package, you will need to install a
symlink in the crabgrass/vendor directory to rails:
  % ln -s /usr/share/rails vendor/rails

= Configuration

Before you go on, you must create the secret.txt file:

  rake create_a_secret RAILS_ENV=production

There are several required configuration files:

Look over the config/crabgrass.production.yml (or development)
configuration for any additional changes. See
CONFIGURATION[link:files/doc/CONFIGURATION.html] for more details.

The default configuration is probably what you want for running in
development mode.

= Setup Mysql Database

Crabgrass currently only works with mysql.

OS X Note: usually in OS X mysql will be installed without /etc/my.cnf. You need to copy /usr/local/mysql/support-files/my-small.cnf to /etc/my.cnf. In some cases the mysql installation path might be different. Try the command `which mysql` to find it.

* Configure mysql server character set

Add these lines if they don't already exist to /etc/my.cnf (under [mysqld] section):

  character-set-server=utf8
  collation-server=utf8_general_ci

* Create the database:

  mysqladmin -u root -p create crabgrass

If you are doing development, also create these databases
crabgrass_development, crabgrass_test

* Create database user/password

For development work, there is not much need to create a database user
for crabgrass. For a production deployment, however, you should do
this (substitute your sekret password):

  GRANT USAGE ON crabgrass.* TO 'crabgrass'@'localhost' IDENTIFIED BY 'xxxx';
  GRANT ALL PRIVILEGES ON crabgrass.* TO 'crabgrass'@'localhost';
  flush privileges;

* Setup the application database configuration file

There is a sample database configuration file in the <tt>config</tt>
directory of the crabgrass application. Use that to create a
<tt>config/database.yml</tt> file, and edit it accordingly:

  cd crabgrass/config
  cp database.yml.example database.yml

Configure database.yml with the correct information for the different
environments you will be using, you only need to configure the ones
you will be using.

For some linux distributions, you may need to specify a socket file
for mysql like so: <tt>socket: /var/run/mysqld/mysqld.sock</tt>. You
can probably figure out what socket to use by running <tt>ps -ef |
grep mysql</tt>.

* Populate the database with the schema and default data

The final step is to load the crabgrass database schema and populate
it with the appropriate data:

  cd crabgrass
  rake db:schema:load RAILS_ENV=production
  rake cg:load_default_data RAILS_ENV=production

If you are doing development, and have created the
crabgrass_development database, you will need to specify
RAILS_ENV=development instead. Additionally, for development, you will
need to load the test fixture data, NOTE that this is not needed for a
production setup:

  rake db:fixtures:load

If you have run <tt>rake db:fixtures:load</tt>, there will be a bunch
of test data loaded, including users. To get started, you can login as
user 'blue' with password 'blue'.

= Running Crabgrass

  cd crabgrass
  script/server -e production

This will run crabgrass in production mode, if you wish to run it in
development mode you can omit the -e option as development mode is the
default. If you donâ€™t want to use webrick (the mini-web-server that
comes with rails) you can install passenger, or mongrel along with
apache. If installed, script/server will pick them instead. If you are
running in production, it is highly recommended that you do not run
webrick as it is single-threaded and quite slow, it is fine for
development purposes.

Once the server is running, just point your web browser at
http://localhost:3000. If you have followed the above steps, you
should get the default crabgrass login screen. Make sure this works
before proceeding.

= Helper daemons

Now that you have a running crabgrass installation, you need to get a
couple of helper pieces up and running, one is necessary for regular
tasks (backgroundrb) and the other is for search capability (sphinx
search). Please see the following two sections for how to get these
going.

== Running Background Tasks

There are many tasks which crabgrass needs to run regularly in the
background, including cleaning out cache files and recreating the
sphinx index.

These tasks will only be run if you have backgroundrb running. You can
configure the frequency of these tasks by editing
config/backgroundrb.yml.

To start backgroundrb, you can do one of the following:

  script/start_stop_crabgrass_daemons.rb start-bgrb

== Running the Sphinx Search deamon

Sphinx is used for searching, it must be running before crabgrass is
started for it to be used, it will not work if it is started after
crabgrass is running. If the Sphinx searchd daemon is not detected,
then crabgrass will not use fulltext searching.

First make sure that you have an up-to-date sphinx database:

  rake ts:index RAILS_ENV=production

Then to start sphinx, you can do:

  script/start_stop_crabgrass_daemons.rb start-sphinx

For further details, see SPHINX[link:files/doc/SPHINX.html]

= Next steps: Configuration

Now you are are going to want to configure crabgrass: enable/disable
plugins or features, setup sites, and change the way it looks. To get
started configuring crabgrass, please read doc/CONFIGURATION.

You will also want to configure a more reasonable webserver as webrick
is single-threaded and not meant to process more than one request at a
time. For information about how to configure a webserver to serve
crabgrass, such as with apache and passenger (mod_rails), please see
doc/webserver.

Finally, you may wish to consider deployment through the use of
capistrano. There is an example capistrano deploy.rb in the config
directory. More information can be found in doc/capistrano (needs to
be written).
